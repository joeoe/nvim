-- return {
-- 	"simrat39/rust-tools.nvim",
-- 	config = function()
-- 		local rt = require("rust-tools")
-- 		local capabilities = require("cmp_nvim_lsp").default_capabilities(vim.lsp.protocol.make_client_capabilities())
--
-- 		rt.setup({
-- 			server = {
-- 				capabilities = capabilities,
--
-- 				on_attach = function(_, buf)
-- 					-- Hover actions
-- 					vim.keymap.set("n", "<C-space>", rt.hover_actions.hover_actions, { buffer = buf })
-- 					-- Code action groups
-- 					vim.keymap.set("n", "<Leader>a", rt.code_action_group.code_action_group, { buffer = buf })
--
-- 					-- Example maps, set your own with vim.api.nvim_buf_set_keymap(buf, "n", <lhs>, <rhs>, { desc = <desc> })
-- 					-- or a plugin like which-key.nvim
-- 					-- <lhs>        <rhs>                        <desc>
-- 					-- "K"          vim.lsp.buf.hover            "Hover Info"
-- 					-- "<leader>qf" vim.diagnostic.setqflist     "Quickfix Diagnostics"
-- 					-- "[d"         vim.diagnostic.goto_prev     "Previous Diagnostic"
-- 					-- "]d"         vim.diagnostic.goto_next     "Next Diagnostic"
-- 					-- "<leader>e"  vim.diagnostic.open_float    "Explain Diagnostic"
-- 					-- "<leader>ca" vim.lsp.buf.code_action      "Code Action"
-- 					-- "<leader>cr" vim.lsp.buf.rename           "Rename Symbol"
-- 					-- "<leader>fs" vim.lsp.buf.document_symbol  "Document Symbols"
-- 					-- "<leader>fS" vim.lsp.buf.workspace_symbol "Workspace Symbols"
-- 					-- "<leader>gq" vim.lsp.buf.formatting_sync  "Format File"
--
-- 					vim.api.nvim_buf_set_option(buf, "formatexpr", "v:lua.vim.lsp.formatexpr()")
-- 					vim.api.nvim_buf_set_option(buf, "omnifunc", "v:lua.vim.lsp.omnifunc")
-- 					vim.api.nvim_buf_set_option(buf, "tagfunc", "v:lua.vim.lsp.tagfunc")
-- 				end,
-- 			},
-- 		})
-- 	end,
-- }
